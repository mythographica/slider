{"version":3,"sources":["components/Footer.js","components/Root.js","components/Title.js","components/Header.js","components/Chart.js","components/Chart/tree.js","components/Mdx.js","config.js","main.js","index.js","postCreation.js","keyboard.js"],"names":["Footer","count","index","scale","padStart","length","className","Root","this","rootElement","document","getElementById","rootId","prototype","View","slides","current","SlideView","view","ReactDOM","render","StrictMode","theme","dark","min","max","value","Title","Object","assign","title","subtitle","Header","charts","tree","chartData","dy","dx","margin","width","stash","root","d3","nodeSize","diagonal","x","d","y","x0","y0","descendants","forEach","i","id","_children","children","depth","includes","data","name","svg","attr","left","top","style","gLink","append","gNode","update","source","duration","altKey","nodes","reverse","links","right","eachBefore","node","height","bottom","transition","tween","window","ResizeObserver","dispatch","selectAll","nodeEnter","enter","on","text","clone","lower","merge","exit","remove","link","target","linkEnter","o","Chart","props","opts","chart","ref","chartRoot","chartSVG","type","Mdx","me","jsx","mdx","sync","components","code","Prism","Heading","Box","app","proto","slide","key","split","reduce","answer","scope","MDXContent","Main","slideListIndex","slideList","list","direction","defineProperty","get","set","parseInt","Array","isArray","init","fetch","then","response","catch","error","Error","alert","filter","Boolean","push","start","fetchSlide","makeRender","setSlideIndex","undefined","getNextSlide","getPrevSlide","slideNext","slideListLength","slidePrev","slideFileName","ext","viewTypes","md","parser","arr","map","it","trim","join","collectTypes","leaf","subtypes","defaultCollection","Map","size","onerror","args","console","log","defaultNamespace","registerHook","inheritedInstance","entries","getPrototypeOf","call","instance","App","define","Slide","Component","listener","keypress","Listener","simple_combo","bind","msg","input","prompt","number","message","addEventListener","e","tagName"],"mappings":"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","file":"static/js/main.e91d3d78.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Footer = ({ count, index, scale }) => {\n\t\n\tcount = `${count}`;\n\tindex = `${index}`.padStart(count.length, '0');\n\t\n\treturn (\n\t\t<div className=\"Footer\">\n\t\t\t<h3 className=\"myname\">github@wentout</h3>\n\t\t\t<h3 className=\"slides\"> { index } » { count }</h3>\n\t\t</div>\n\t);\n};\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'theme-ui';\nimport { dark } from '@theme-ui/presets';\nimport { Progress } from 'theme-ui';\n\nimport Footer from './Footer';\n\nconst Root = function () {\n\tthis.rootElement = document.getElementById( this.rootId );\n};\n\nRoot.prototype.View = function () {\n\tconst app = this;\n\t\n\tconst {\n\t\tslides,\n\t} = app;\n\t\n\tconst {\n\t\tcurrent,\n\t\tindex,\n\t\tcount\n\t} = slides;\n\t\n\tconst {\n\t\tview\n\t} = current;\n\t\n\tconst slide = new app[view]();\n\tconst SlideView = slide.View;\n\t\n\tReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<ThemeProvider theme={dark}>\n\t\t\t\t<Progress min={0} max={count-1} value={index}></Progress>\n\t\t\t\t<SlideView />\n\t\t\t\t<Footer {...slides} />\n\t\t\t</ThemeProvider>\n\t\t</React.StrictMode>,\n\t\tthis.rootElement\n\t);\n};\n\nexport default Root;","import React from \"react\";\n\nconst Title = function () {\n\tObject.assign(this, this.slides.current);\n};\n\nTitle.prototype.View = function () {\n\treturn (\n\t\t<div className=\"Title\">\n\t\t\t<h1>{ this.title }</h1>\n\t\t\t<h1 className=\"subtitle\">{ this.subtitle }</h1>\n\t\t</div>\n\t);\n};\n\nexport default Title;","import React from \"react\";\n\nconst Header = function () {\n\tObject.assign(this, this.slides.current);\n};\n\nHeader.prototype.View = function () {\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<h1>{ this.title }</h1>\n\t\t</div>\n\t);\n};\n\nexport default Header;","import React from \"react\";\nimport tree from './Chart/tree';\n\nconst charts = {\n\ttree,\n};\n\nconst Chart = function (props) {\n\t\n\tconst {\n\t\tid,\n\t\topts,\n\t} = props;\n\tconst {\n\t\tchart\n\t} = opts;\n\t\n\tconst appendSVG = function (chartRoot) {\n\t\tconst chartSVG = charts[chart.type](chart);\n\t\tif (chartRoot) {\n\t\t\tchartRoot.append(chartSVG);\n\t\t}\n\t};\n\t\n\treturn (<div ref={appendSVG} id={id} className='Chart'>{opts.title}</div>);\n};\n\nexport default Chart;","import * as d3 from \"d3\";\n\nconst tree = function ({\n\tchartData,\n\tdy,\n\tdx,\n\tmargin,\n\twidth,\n\tstash\n\t// tree,\n\t// diagonal\n}) {\n\t\n\tconst root = d3.hierarchy(chartData);\n\t\n\tconst tree = d3.tree().nodeSize([dy, dx]);\n\tconst diagonal = d3.linkHorizontal().x(d => d.y).y(d => d.x);\n\t\n\troot.x0 = dy;\n\troot.y0 = 0;\n\troot.descendants().forEach((d, i) => {\n\t\td.id = i;\n\t\td._children = d.children;\n\t\tif (d.depth && stash && stash.includes(d.data.name)) {\n\t\t\td.children = null;\n\t\t}\n\t});\n\t\n\tconst svg = d3.create(\"svg\")\n\t\t.attr(\"viewBox\", [-margin.left, -margin.top, width, dx])\n\t\t.style(\"font\", \"10px sans-serif\")\n\t\t.style(\"user-select\", \"none\");\n\t\n\tconst gLink = svg.append(\"g\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"#555\")\n\t\t.attr(\"stroke-opacity\", 0.4)\n\t\t.attr(\"stroke-width\", 1.5);\n\t\n\tconst gNode = svg.append(\"g\")\n\t\t.attr(\"cursor\", \"pointer\")\n\t\t.attr(\"pointer-events\", \"all\");\n\t\n\tfunction update(source) {\n\t\tconst duration = d3.event && d3.event.altKey ? 2500 : 250;\n\t\tconst nodes = root.descendants().reverse();\n\t\tconst links = root.links();\n\t\n\t\t// Compute the new tree layout.\n\t\ttree(root);\n\t\n\t\tlet left = root;\n\t\tlet right = root;\n\t\troot.eachBefore(node => {\n\t\t\tif (node.x < left.x) left = node;\n\t\t\tif (node.x > right.x) right = node;\n\t\t});\n\t\n\t\tconst height = right.x - left.x + margin.top + margin.bottom;\n\t\n\t\tconst transition = svg.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"viewBox\", [-margin.left, left.x - margin.top, width, height])\n\t\t\t.tween(\"resize\", window.ResizeObserver ? null : () => () => svg.dispatch(\"toggle\"));\n\t\n\t\t// Update the nodes…\n\t\tconst node = gNode.selectAll(\"g\").data(nodes, d => d.id);\n\t\n\t\t// Enter any new nodes at the parent's previous position.\n\t\tconst nodeEnter = node.enter().append(\"g\")\n\t\t\t.attr(\"transform\", d => `translate(${source.y0},${source.x0})`)\n\t\t\t.attr(\"fill-opacity\", 10)\n\t\t\t.attr(\"stroke-opacity\", 10)\n\t\t\t.on(\"click\", d => {\n\t\t\t\td.children = d.children ? null : d._children;\n\t\t\t\tupdate(d);\n\t\t\t});\n\t\n\t\tnodeEnter.append(\"circle\")\n\t\t\t.attr(\"r\", 5)\n\t\t\t.attr(\"fill\", d => d._children ? \"#555\" : \"#999\")\n\t\t\t.attr(\"stroke-width\", 15);\n\t\n\t\tnodeEnter.append(\"text\")\n\t\t\t.attr(\"dy\", \"0.41em\")\n\t\t\t.attr(\"x\", d => d._children ? -9 : 9)\n\t\t\t.attr(\"text-anchor\", d => d._children ? \"end\" : \"start\")\n\t\t\t.text(d => d.data.name)\n\t\t.clone(true).lower()\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\n\t\t\t.attr(\"stroke-width\", 5)\n\t\t\t.attr(\"stroke\", \"white\");\n\t\n\t\t// Transition nodes to their new position.\n\t\t// const nodeUpdate = \n\t\tnode.merge(nodeEnter).transition(transition)\n\t\t\t.attr(\"transform\", d => `translate(${d.y},${d.x})`)\n\t\t\t.attr(\"fill-opacity\", 100)\n\t\t\t.attr(\"stroke-opacity\", 1);\n\t\n\t\t// Transition exiting nodes to the parent's new position.\n\t\t// const nodeExit = \n\t\tnode.exit().transition(transition).remove()\n\t\t\t.attr(\"transform\", d => `translate(${source.y},${source.x})`)\n\t\t\t.attr(\"fill-opacity\", 0)\n\t\t\t.attr(\"stroke-opacity\", 0);\n\t\n\t\t// Update the links…\n\t\tconst link = gLink.selectAll(\"path\").data(links, d => d.target.id);\n\t\n\t\t// Enter any new links at the parent's previous position.\n\t\tconst linkEnter = link.enter().append(\"path\")\n\t\t\t.attr(\"d\", d => {\n\t\t\tconst o = {x: source.x0, y: source.y0};\n\t\t\treturn diagonal({source: o, target: o});\n\t\t\t});\n\t\n\t\t// Transition links to their new position.\n\t\tlink.merge(linkEnter).transition(transition)\n\t\t\t.attr(\"d\", diagonal);\n\t\n\t\t// Transition exiting nodes to the parent's new position.\n\t\tlink.exit().transition(transition).remove()\n\t\t\t.attr(\"d\", d => {\n\t\t\tconst o = {x: source.x, y: source.y};\n\t\t\treturn diagonal({source: o, target: o});\n\t\t\t});\n\t\n\t\t// Stash the old positions for transition.\n\t\troot.eachBefore(d => {\n\t\t\td.x0 = d.x;\n\t\t\td.y0 = d.y;\n\t\t});\n\t}\n\t\n\tupdate(root);\n\t\n\treturn svg.node();\n};\n\nexport default tree;","import React from \"react\";\nimport MDX from '@mdx-js/runtime';\nimport mdx from '@mdx-js/mdx';\nimport { ThemeProvider } from 'theme-ui';\nimport { dark } from '@theme-ui/presets';\nimport Prism from '@theme-ui/prism';\n\nimport Chart from './Chart';\n\nimport { Box, Heading } from 'theme-ui';\n\nconst Mdx = function () {\n\tthis.data = this.slides.current.data;\n};\n\nMdx.prototype.View = function () {\n\t\n\tconst me = this;\n\t\n\tconst {\n\t\tdata\n\t} = me;\n\t\n\tconst jsx = mdx.sync(data);\n\t\n\tconst app = function (proto) {\n\t\tconst key = proto.slide.key;\n\t\tconst split = key.split('.');\n\t\tconst data = split.reduce((answer, name) => {\n\t\t\tanswer = answer[name];\n\t\t\treturn answer;\n\t\t}, me);\n\t\treturn `${data}`;\n\t};\n\n\tconst components = {\n\t\tcode: Prism,\n\t\tHeading,\n\t\tBox,\n\t\tapp,\n\t\tChart,\n\t};\n\t\n\tconst scope = {\n\t\tjsx,\n\t\tapp : me\n\t};\n\t\n\t// const MDXContent = Object.assign({}, data, { jsx });\n\tconst MDXContent = data;\n\t\n\treturn (\n\t\t<ThemeProvider theme={dark}>\n\t\t\t<div className=\"Slide\">\n\t\t\t\t<MDX components={components} scope={scope}>\n\t\t\t\t\t{MDXContent}\n\t\t\t\t</MDX>\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default Mdx;","const STARTER_SLIDE = 0;\n\nconst CODES = {\n\t37 : 'slidePrev',\n\t39 : 'slideNext',\n};\n\nexport {\n\tSTARTER_SLIDE,\n\tCODES\n};","import { STARTER_SLIDE } from './config';\n\nimport { defaultCollection } from \"mnemonica\";\n\nconst Main = function ( rootId ) {\n\t\n\tlet slideListIndex = 0;\n\tlet slideList = [];\n\t\n\tthis.rootId = rootId;\n\t\n\tthis.slides = {\n\t\tcount: 0,\n\t\tindex: STARTER_SLIDE,\n\t\tlist: [],\n\t\tslideListIndex,\n\t\tdirection : 'next',\n\t};\n\t\n\tObject.defineProperty(this.slides, 'count', {\n\t\tget () {\n\t\t\treturn this.list.length;\n\t\t}\n\t});\n\t\n\tObject.defineProperty(this.slides, 'current', {\n\t\tget () {\n\t\t\treturn slideList[slideListIndex];\n\t\t}\n\t});\n\t\n\tObject.defineProperty(this.slides, 'slideListLength', {\n\t\tget () {\n\t\t\treturn slideList.length;\n\t\t}\n\t});\n\tObject.defineProperty(this.slides, 'slideListIndex', {\n\t\tget () {\n\t\t\treturn slideListIndex;\n\t\t},\n\t\tset (value) {\n\t\t\tslideListIndex = parseInt(value) || 0;\n\t\t}\n\t});\n\t\n\tObject.defineProperty(this.slides, 'slideList', {\n\t\tset (value) {\n\t\t\t\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tslideList = value;\n\t\t\t\tif (this.direction === 'next') {\n\t\t\t\t\tslideListIndex = 0;\n\t\t\t\t} else {\n\t\t\t\t\tslideListIndex = slideList.length -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tslideList = [value];\n\t\t\t}\n\t\t\t\n\t\t}\n\t});\n};\n\nMain.prototype = {\n\tasync init () {\n\t\tthis.root = new this.Root();\n\t\tconst list = await fetch('./slides/list.txt')\n\t\t\t.then((response) => {\n\t\t\t\treturn response.text();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif (data instanceof Error) {\n\t\t\t\t\twindow.alert('something wrong');\n\t\t\t\t}\n\t\t\t\treturn data\n\t\t\t\t\t.split('\\n')\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.filter(name => name !== 'list.txt');\n\t\t\t});\n\t\t\t\n\t\tthis.slides.list.push(...list);\n\t\treturn this;\n\t},\n\tstart () {\n\t\tthis.fetchSlide();\n\t},\n\t\n\tmakeRender () {\n\t\tthis.root.View();\n\t},\n\t\n\tsetSlideIndex (index) {\n\t\tconst {\n\t\t\tcount\n\t\t} = this.slides;\n\t\t\n\t\tif (index === undefined) {\n\t\t\tindex = this.slides.index;\n\t\t} else {\n\t\t\tif (typeof index !== 'number') {\n\t\t\t\tthrow new Error('index is not a number');\n\t\t\t}\n\t\t\tif (index >= 0 && index < count) {\n\t\t\t\tthis.slides.index = parseInt(index, 10) || 0;\n\t\t\t} else if (index === -1) {\n\t\t\t\tthis.slides.index = count - 1;\n\t\t\t} else {\n\t\t\t\tthrow new Error('index is not valid');\n\t\t\t}\n\t\t}\n\t\n\t\tthis.fetchSlide();\n\t\t\n\t},\n\t\n\tgetNextSlide () {\n\t\tconst {\n\t\t\tcount\n\t\t} = this.slides;\n\t\t\n\t\tif (this.slides.index < count - 1) {\n\t\t\tthis.slides.index++;\n\t\t} else {\n\t\t\tthis.slides.index=0;\n\t\t}\n\t\t\n\t\tthis.slides.direction = 'next';\n\t\tthis.setSlideIndex();\n\t\t\n\t},\n\tgetPrevSlide () {\n\t\t\n\t\tif (this.slides.index > 0) {\n\t\t\tthis.slides.index--;\n\t\t} else {\n\t\t\tthis.slides.index = this.slides.count - 1;\n\t\t}\n\t\t\n\t\tthis.slides.direction = 'prev';\n\t\tthis.setSlideIndex();\n\t},\n\t\n\tslideNext () {\n\t\tconst {\n\t\t\tslides\n\t\t} = this;\n\t\tconst {\n\t\t\tslideListLength,\n\t\t} = slides;\n\t\t\n\t\tslides.slideListIndex = slides.slideListIndex + 1;\n\t\tif (slides.slideListIndex >= slideListLength) {\n\t\t\tthis.getNextSlide();\n\t\t} else {\n\t\t\tthis.makeRender();\n\t\t}\n\t},\n\tslidePrev () {\n\t\tconst {\n\t\t\tslides\n\t\t} = this;\n\t\tslides.slideListIndex = slides.slideListIndex - 1;\n\t\tif (slides.slideListIndex < 0) {\n\t\t\tthis.getPrevSlide();\n\t\t} else {\n\t\t\tthis.makeRender();\n\t\t}\n\t},\n\n\tfetchSlide () {\n\t\tconst app = this;\n\t\tconst {\n\t\t\tslides\n\t\t} = app;\n\t\tconst {\n\t\t\tindex,\n\t\t\tlist\n\t\t} = slides;\n\t\t\n\t\tslides.slideListIndex = 0;\n\t\t\n\t\tconst slideFileName = list[index];\n\t\tconst [, ext] = slideFileName.split('.');\n\t\t\n\t\tconst viewTypes = {\n\t\t\tmd : 'Mdx',\n\t\t\tmdx : 'Mdx',\n\t\t\tjsx : 'Jsx',\n\t\t};\n\t\t\n\t\tconst parser = ext === 'json' ? 'json' : 'text';\n\t\t\n\t\tfetch(`./slides/${slideFileName}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response[parser]();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif (data instanceof Error) {\n\t\t\t\t\twindow.alert('something wrong');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ext === 'json') {\n\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\tslides.slideList = data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tslides.slideList = data;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst view = viewTypes[ext];\n\t\t\t\t\t\n\t\t\t\t\tconst slideList = data.split('-----').reduce((arr, mdx) => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tmdx = mdx.split('\\n').map(it => it.trim()).join('\\n');\n\t\t\t\t\t\t\n\t\t\t\t\t\tarr.push({\n\t\t\t\t\t\t\tview,\n\t\t\t\t\t\t\tdata : mdx\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn arr;\n\t\t\t\t\t}, []);\n\t\t\t\t\t\n\t\t\t\t\tslides.slideList = slideList;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tapp.makeRender();\n\t\t\t});\n\t},\n\t\n\tcollectTypes (leaf = undefined, subtypes = defaultCollection) {\n\t\treturn [...subtypes].reduce((o, [name, type]) => {\n\t\t\tconst value = {\n\t\t\t\tname\n\t\t\t};\n\t\t\tif (type.subtypes instanceof Map && type.subtypes.size > 0) {\n\t\t\t\tvalue.children = this.collectTypes(leaf, type.subtypes);\n\t\t\t} else {\n\t\t\t\tif (typeof leaf === 'function') {\n\t\t\t\t\tvalue.children = leaf(value);\n\t\t\t\t}\n\t\t\t\tif (typeof leaf === 'string') {\n\t\t\t\t\tvalue.children = [{ name : `${name}${leaf}` }];\n\t\t\t\t}\n\t\t\t}\n\t\t\to.push(value);\n\t\t\treturn o;\n\t\t}, []);\n\t},\n\t\n};\n\nexport default Main;","import { Component } from 'react-dom';\n\nimport { define, defaultNamespace } from \"mnemonica\";\n\nimport { Root, Title, Header, Mdx } from './components';\n\nimport initKeyboard from './keyboard';\nimport Main from './main';\nimport postHook from './postCreation';\n\nwindow.onerror = function (...args) {\n\tconsole.log(args);\n\tdebugger;\n};\n\ndefaultNamespace.registerHook('postCreation', postHook);\n\nconst App = define('Main', Main);\nconst Slide = App.define('Root', Root);\n\tSlide.define('Title', Title);\n\tSlide.define('Header',Header);\n\tSlide.define('Mdx', Mdx);\n\nconst app = App.call(Component, 'root');\n// const app = new App('root');\n\napp.init()\n\t.then(app.start)\n\t.then(initKeyboard.bind(app));\n\nwindow.addEventListener('click', (e) => {\n\tif (e.target && e.target.tagName !== 'circle') {\n\t\tapp.slideNext();\n\t}\n});\n\n// const rescale = () => {\n// \ttry {\n// \t\tconst {\n// \t\t\tscrollWidth,\n// \t\t\tclientWidth,\n// \t\t\toffsetWidth,\n// \t\t} = window.document.body;\n// \t\tconst minwidth = Math.min(scrollWidth, clientWidth, offsetWidth);\n// \t\tconst maxwidth = Math.max(scrollWidth, clientWidth, offsetWidth);\n// \t\tconst deltawidth = maxwidth / minwidth;\n// \t\tconst scale = minwidth / 1920 * deltawidth;\n// \t\tif (scale < 1) {\n// \t\t\twindow.document.body.style.zoom = `${scale*100}%`;\n// \t\t\tapp.setScale(scale);\n// \t\t}\n// \t} catch (e) {}\n// };\n\n// window.setTimeout(rescale, 1000);\n// window.addEventListener('resize', rescale);","export default function ({inheritedInstance}) {\n\tObject.entries(Object.getPrototypeOf(inheritedInstance)).forEach(([name, value]) => {\n\t\tif (typeof value === 'function') {\n\t\t\tinheritedInstance[name] = (...args) => {\n\t\t\t\ttry {\n\t\t\t\t\treturn value.call(inheritedInstance, ...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror.instance = inheritedInstance;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};","\nexport default function () {\n\t\n\tconst app = this;\n\tconst listener = new window.keypress.Listener();\n\t\n\tlistener.simple_combo('left', app.slidePrev);\n\tlistener.simple_combo('right', app.slideNext);\n\tlistener.simple_combo('space', app.slideNext);\n\tlistener.simple_combo('home', app.setSlideIndex.bind(app, 0));\n\tlistener.simple_combo('end', app.setSlideIndex.bind(app, -1));\n\tlistener.simple_combo('ctrl m', () => {\n\t\tconst {\n\t\t\tcount\n\t\t} = app.slides;\n\t\tconst msg = `please input slide number between 1 an ${count+1}`;\n\t\tconst input = window.prompt(msg);\n\t\tvar number;\n\t\ttry {\n\t\t\tnumber = parseInt(input, 10) - 1;\n\t\t\tif (number === -1) {\n\t\t\t\tnumber = 0;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\twindow.alert('invalid input');\n\t\t}\n\t\ttry {\n\t\t\tapp.setSlideIndex(number);\n\t\t} catch (error) {\n\t\t\twindow.alert(error.message);\n\t\t}\n\t});\n\t\n\t/*\n\twindow.onkeyup = function (event) {\n\t\t\n\t\tconst {\n\t\t\tkeyCode\n\t\t} = event;\n\t\t\n\t\tconst where = CODES[keyCode];\n\t\tif (typeof app[where] === 'function') {\n\t\t\tapp[where]();\n\t\t}\n\t\t\n\t};\n\t*/\n\n};"],"sourceRoot":""}